name: Deploy cloudflare-workers to Workers

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cloudflare-workers
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repo
      - uses: actions/setup-node@v4
        name: Set Node.js 20.x
        with:
          node-version: 20.x
      - uses: borales/actions-yarn@v5
        name: Run install
        with:
          cmd: install
          dir: cloudflare-workers
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          workingDirectory: "cloudflare-workers"
          wranglerVersion: "3.78.10"
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          secrets: |
            ADMINISTRATOR_SECRET
            TELEGRAM_BOT_TOKEN
            TELEGRAM_CHAT_ID
            GITHUB_APP_CLIENT_ID
            GITHUB_APP_CLIENT_SECRET
            OAUTH_JWT_SECRET
            GITHUB_ORG_ADMINISTRATOR_TEAM 
          preCommands: |
            wrangler d1 execute comments --yes --file=schema.sql
        env:
          ADMINISTRATOR_SECRET: ${{ secrets.ADMINISTRATOR_SECRET }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          GITHUB_APP_CLIENT_ID: ${{ secrets.GH_APP_CLIENT_ID }}
          GITHUB_APP_CLIENT_SECRET: ${{ secrets.GH_APP_CLIENT_SECRET }}
          OAUTH_JWT_SECRET: ${{ secrets.OAUTH_JWT_SECRET }}
          GITHUB_ORG_ADMINISTRATOR_TEAM: ${{ secrets.GH_ORG_ADMINISTRATOR_TEAM }}
  upload-artifacts:
    name: Upload Artifacts
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cloudflare-workers
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repo
      - uses: actions/upload-artifact@v4
        with:
          name: cloudflare-workers
          path: cloudflare-workers
